{"version":3,"sources":["components/Carousel/carousel.context.jsx","components/Carousel/Form/form.component.jsx","components/Carousel/Indicator/indicator.component.jsx","components/Carousel/Control/control.component.jsx","components/Carousel/carousel.component.jsx","components/App/App.js","reportWebVitals.js","index.js"],"names":["CarouselContext","createContext","CarouselContextProvider","children","useState","questions","setQuestions","currentQuestion","setCurrentQuestion","openQuestion","index","Provider","value","fetchQuestions","questionData","navigateQuestions","direction","count","length","selectAnswer","options","map","option","selected","current","newQuestions","Content","useContext","handleClickAnswer","el","selectedIndex","target","dataset","className","title","answer","i","type","name","id","data-index","onChange","checked","required","htmlFor","onClick","Indicator","handleClickIndicator","e","q","onTouchMove","preventDefault","Control","data-direction","Carousel","useEffect","touchStart","undefined","touchEnd","targetTouches","clientX","onTouchEnd","changedTouches","diff","style","backgroundImage","window","location","image","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88506edf.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\nimport questionData from '../../data/questions.json'\n\nconst CarouselContext = createContext([])\n\nexport const CarouselContextProvider = ({ children }) => {\n\tconst [questions, setQuestions] = useState([])\n\tconst [currentQuestion, setCurrentQuestion] = useState({})\n\n\tfunction fetchQuestions() {\n\t\tsetQuestions(questionData.questions)\n\t\tif (!currentQuestion.index) {\n\t\t\tsetCurrentQuestion({\n\t\t\t\t...questionData.questions[0],\n\t\t\t\tindex: 0,\n\t\t\t})\n\t\t}\n\t}\n\n\tconst navigateQuestions = direction => {\n\t\tconst count = questions.length\n\t\tlet index = currentQuestion.index\n\n\t\tif (direction === `left`) {\n\t\t\tindex = index - 1 < 0 ? count - 1 : index - 1\n\t\t} else {\n\t\t\tindex = index + 1 === count ? 0 : index + 1\n\t\t}\n\t\topenQuestion(index)\n\t}\n\n\tconst openQuestion = index => {\n\t\tsetCurrentQuestion({ ...questions[index], index: index })\n\t}\n\n\tconst selectAnswer = index => {\n\t\tconst options = currentQuestion.options.map(option => ({ ...option, selected: false }))\n\t\toptions[index].selected = true\n\n\t\tconst current = {\n\t\t\t...currentQuestion,\n\t\t\tindex: currentQuestion.index,\n\t\t\toptions,\n\t\t}\n\t\tsetCurrentQuestion({\n\t\t\t...current,\n\t\t})\n\n\t\tconst newQuestions = questions\n\t\tnewQuestions[currentQuestion.index] = current\n\t\tsetQuestions({\n\t\t\t...newQuestions,\n\t\t})\n\t}\n\n\treturn (\n\t\t<CarouselContext.Provider\n\t\t\tvalue={{\n\t\t\t\tquestions,\n\t\t\t\tcurrentQuestion,\n\t\t\t\tfetchQuestions,\n\t\t\t\tnavigateQuestions,\n\t\t\t\topenQuestion,\n\t\t\t\tselectAnswer,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</CarouselContext.Provider>\n\t)\n}\n\nexport default CarouselContext\n","import React, { useContext } from 'react'\nimport './form.styles.scss'\n\nimport CarouselContext from '../carousel.context'\n\nexport default function Content() {\n\tconst { currentQuestion, selectAnswer } = useContext(CarouselContext)\n\n\tconst handleClickAnswer = el => {\n\t\tconst selectedIndex = el.target.dataset.index\n\t\tselectAnswer(selectedIndex)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{currentQuestion.options && (\n\t\t\t\t<div className=\"formContainer\">\n\t\t\t\t\t<h1>{currentQuestion.title}</h1>\n\t\t\t\t\t<form>\n\t\t\t\t\t\t{currentQuestion.options.map((answer, i) => (\n\t\t\t\t\t\t\t<div key={i}>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\tname=\"question\"\n\t\t\t\t\t\t\t\t\tid={i}\n\t\t\t\t\t\t\t\t\tdata-index={i}\n\t\t\t\t\t\t\t\t\tonChange={handleClickAnswer}\n\t\t\t\t\t\t\t\t\tchecked={answer.selected}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor={answer.title} data-index={i} onClick={handleClickAnswer}>\n\t\t\t\t\t\t\t\t\t{answer.title}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t)\n}\n","import React, { useContext } from 'react'\nimport './indicator.styles.scss'\n\nimport CarouselContext from '../carousel.context'\n\nexport default function Indicator() {\n\tconst { questions, currentQuestion, openQuestion } = useContext(CarouselContext)\n\n\tconst handleClickIndicator = e => {\n\t\tconst selectedIndex = ~~e.target.dataset.index\n\t\topenQuestion(selectedIndex)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{questions.length && (\n\t\t\t\t<div className=\"indicatorContainer\">\n\t\t\t\t\t{questions.map((q, i) => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tdata-index={i}\n\t\t\t\t\t\t\tclassName={`indicator ${i === currentQuestion.index ? `active` : ``}`}\n\t\t\t\t\t\t\tonClick={handleClickIndicator}\n\t\t\t\t\t\t\tonTouchMove={e => e.preventDefault()}\n\t\t\t\t\t\t></div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t)\n}\n","import React, { useContext } from 'react'\nimport './control.styles.scss'\nimport CarouselContext from '../carousel.context'\n\nexport default function Control({ direction }) {\n\tconst { navigateQuestions } = useContext(CarouselContext)\n\n\tconst handleOnClick = el => {\n\t\tconst direction = el.target.dataset.direction\n\t\tnavigateQuestions(direction)\n\t}\n\n\treturn (\n\t\t<div className=\"control\" data-direction={direction} onClick={handleOnClick}>\n\t\t\t<div className={`arrow ${direction}`}></div>\n\t\t\t<div className={`arrow ${direction}`}></div>\n\t\t</div>\n\t)\n}\n","import React, { useContext, useEffect, useState } from 'react'\n\nimport './carousel.styles.scss'\n\nimport Form from './Form/form.component'\nimport Indicator from './Indicator/indicator.component'\nimport Control from './Control/control.component'\nimport CarouselContext from './carousel.context'\n\nexport default function Carousel() {\n\tconst { questions, currentQuestion, fetchQuestions, navigateQuestions } = useContext(\n\t\tCarouselContext\n\t)\n\n\tuseEffect(() => {\n\t\tfetchQuestions()\n\t}, [!questions.length])\n\n\tlet touchStart = undefined\n\tlet touchEnd = undefined\n\tconst handleTouchMove = e => {\n\t\tif (touchStart == null) touchStart = e.targetTouches[0].clientX\n\t}\n\n\tconst handleTouchEnd = e => {\n\t\tif (!touchStart) return\n\n\t\ttouchEnd = e.changedTouches[0].clientX\n\t\tconst diff = touchStart - touchEnd\n\n\t\tif (diff < -150) {\n\t\t\tnavigateQuestions(`left`)\n\t\t}\n\t\telse if (diff > 150) {\n\t\t\tnavigateQuestions(`right`)\n\t\t}\n\n\t\ttouchStart = undefined\n\t\ttouchEnd = undefined\n\t}\n\n\treturn (\n\t\t<div className=\"questionCarousel\" onTouchMove={handleTouchMove} onTouchEnd={handleTouchEnd}>\n\t\t\t<div\n\t\t\t\tclassName=\"carouselHeader\"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundImage: `url(${window.location}/images/${currentQuestion.image})`,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Control direction=\"left\" />\n\t\t\t\t<Control direction=\"right\" />\n\t\t\t</div>\n\t\t\t<div className=\"carouselContent\">\n\t\t\t\t<Form />\n\t\t\t\t<Indicator />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import './App.css'\nimport Carousel from '../Carousel/carousel.component'\nimport { CarouselContextProvider } from '../Carousel/carousel.context'\n\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<CarouselContextProvider>\n\t\t\t\t<Carousel />\n\t\t\t</CarouselContextProvider>\n\t\t</div>\n\t)\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}